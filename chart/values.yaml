deployments:
  app:
    enabled: true
    replicaCount: 1
    containers:
      app:
        image:
          repository: gcr.io/project/project
          tag: latest
        http:
          enabled: true
        private:
          enabled: true
        probe:
          enabled: true
        livenessProbe:
          enabled: true
        readinessProbe:
          enabled: true
        securityContext:
          runAsNonRoot: true
        configMap: app
        resources:
          requests:
            cpu: 10m
            memory: 10Mi
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxUnavailable: 0
        maxSurge: 1
    labels:
      networking/allow-redis-egress: "true"
      networking/allow-database-egress: "true"
      networking/allow-google-apis-egress: "true"
      networking/allow-sentry-egress: "true"
      networking/allow-hydra-egress: "true"
      networking/allow-hydra-ingress: "true"
      networking/allow-loyalty-srv-egress: "true"
      networking/allow-loyalty-srv-ingress: "true"
      networking/allow-order-srv-egress: "true"
      networking/allow-order-srv-ingress: "true"
      networking/allow-billing-srv-egress: "true"
      networking/allow-help-srv-egress: "true"
      networking/allow-depedencies-egress: "true"
      networking/allow-api-gateway-srv-egress: "true"
      networking/allow-notification-srv-egress: "true"
      networking/allow-social-media-srv-egress: "true"
      networking/allow-social-media-srv-ingress: "true"
      networking/allow-internet-egress: "true"

cronJobs: {}

services:
  app:
    enabled: true
    type: ClusterIP
    http:
      enabled: true
    private:
      enabled: true
    probe:
      enabled: true
    backend:
      enabled: false
    frontend:
      enabled: false

networkPolicies:
  database:
    enabled: true
    podSelector:
      matchLabels:
        networking/allow-database-egress: "true"
    policyTypes:
      - Egress
    annotations:
      "helm.sh/hook": "pre-install,pre-upgrade"
      "helm.sh/hook-weight": "-11"
  depedencies:
    enabled: true
    podSelector:
      matchLabels:
        networking/allow-depedencies-egress: "true"
    policyTypes:
      - Egress

migrations:
  app:
    enabled: true
    containers:
      migrate:
        image:
          repository: gcr.io/project/project
          tag: latest
        volumeMounts:
          - name: lifecycle
            mountPath: /lifecycle
        securityContext:
          runAsNonRoot: true
      proxy:
        image:
          repository: gcr.io/cloudsql-docker/gce-proxy
          tag: 1.31.0-alpine
        volumeMounts:
          - name: lifecycle
            mountPath: /lifecycle
            readOnly: true
        command: ["/bin/sh", "-c"]
        securityContext:
          runAsNonRoot: true
    configMap: appInit
    volumes:
      - name: lifecycle
        emptyDir: {}
    labels:
      networking/allow-database-egress: "true"
      networking/allow-google-apis-egress: "true"
      networking/allow-sentry-egress: "true"

seeds:
  app:
    enabled: true
    annotations:
      "helm.sh/hook": "pre-install,pre-upgrade"
      "helm.sh/hook-delete-policy": "hook-succeeded"
      "helm.sh/hook-weight": "-9"
    containers:
      seed:
        image:
          repository: gcr.io/project/project
          tag: latest
        securityContext:
          runAsNonRoot: true
    configMap: appInit
    volumes:
      - name: lifecycle
        emptyDir: {}
    labels:
      networking/allow-database-egress: "true"
      networking/allow-google-apis-egress: "true"
      networking/allow-redis-egress: "true"
      networking/allow-sentry-egress: "true"

serviceMonitor:
  enabled: false
  labels:
    release: kube-prometheus-stack
  matchLabels:
    service: svc-blue-health-go-srv-app

prometheusRules:
  enabled: false
  labels:
    role: alert-rules
    release: kube-prometheus-stack
    prometheus: kube-prometheus-stack-prometheus
  groups: []

grafana:
  enabled: false

ingress:
  enabled: false

configMaps:
  app:
    BLUE_HEALTH_GO_SRV_PROJECT_ID: prj-blue-s-blue-cluster-13b7
    BLUE_HEALTH_GO_SRV_APP_ENVIRONMENT: staging
    BLUE_HEALTH_GO_SRV_DATABASE_MAX_CONNS: "15"
    BLUE_HEALTH_GO_SRV_JWK_SERVICE_BASE_URL: http://svc-identity-srv-app.identity.svc.cluster.local:8081/.well-known/jwks.json
  appInit:
    BLUE_HEALTH_GO_SRV_MIGRATE_TOUCH_FILE: /lifecycle/main-terminated

secrets: {}
